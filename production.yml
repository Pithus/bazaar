version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_traefik_logs: {}
  production_elasticsearch_data: {}
  production_minio_data: {}
  production_prometheus_data: {}
  production_grafana_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: bazaar_production_django
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - minio
      - mobsf
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  worker:
    <<: *django
    image: bazaar_production_worker
    depends_on:
      - redis
      - postgres
      - elasticsearch
      - minio
    ports: []
    command: /start-worker

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: bazaar_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: bazaar_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
      - production_traefik_logs:/tmp/
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    image: redis:5.0

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    hostname: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms4000m -Xmx4000m"
    volumes:
      - production_elasticsearch_data:/usr/share/elasticsearch/data

  mobsf:
    image: opensecurity/mobile-security-framework-mobsf:v3.4.6
    hostname: mobsf
    environment:
      - "MOBSF_API_ONLY=1"
      - "MOBSF_API_KEY=515d3578262a2539cd13b5b9946fe17e350c321b91faeb1ee56095430242a4a9"

  minio:
    image: minio/minio:RELEASE.2020-11-13T20-10-18Z
    volumes:
      - production_minio_data:/data
    env_file:
      - ./.envs/.production/.django
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  prometheus:
    image: prom/prometheus
    volumes:
      - production_prometheus_data:/prometheus
      - ./config/prometheus.conf:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana
    volumes:
      - production_grafana_data:/var/lib/grafana:rw
    env_file:
      - ./.envs/.production/.grafana
